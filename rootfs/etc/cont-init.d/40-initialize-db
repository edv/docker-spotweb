#!/command/with-contenv bash

if [ "${DB_ENGINE}" = "pdo_sqlite" ]; then
  # Make sure database directory and file exist
  sql_dir=$(dirname "${DB_NAME}")
  mkdir -p "$sql_dir"
  chown abc: "$sql_dir"
  touch "${DB_NAME}"
  chown abc: "${DB_NAME}"
fi

# init/upgrade the db
s6-setuidgid abc php83 /app/bin/upgrade-db.php

# Run query to check if admin has logged in
if [ "${DB_ENGINE}" = "pdo_mysql" ]; then
  admin_login_count=$(mysql --user=${DB_USER} --password=${DB_PASS} --host=${DB_HOST} --port=${DB_PORT} ${DB_NAME} -sse "select count(*) from users where username = 'admin' and lastlogin = 0;")
elif [ "${DB_ENGINE}" = "pdo_pgsql" ]; then
  admin_login_count=$(PGPASSWORD=${DB_PASS} psql -At --username=${DB_USER} --host=${DB_HOST} --port=${DB_PORT} --dbname=${DB_NAME} -c "select count(*) from users where username = 'admin' and lastlogin = 0;")
elif [ "${DB_ENGINE}" = "pdo_sqlite" ]; then
  admin_login_count=$(echo "select count(*) from users where username = 'admin' and lastlogin = 0;" | sqlite3 ${DB_NAME})
fi

if [ $admin_login_count -eq 1 ];
then
  echo "Admin has not logged in, set default password (which is: spotweb)"
  s6-setuidgid abc php83 /app/bin/upgrade-db.php --reset-password admin
else
  echo "Admin has already logged in, no need to set default password"
fi
